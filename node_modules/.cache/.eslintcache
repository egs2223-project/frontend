[{"C:\\EGS_Project\\frontend\\src\\index.js":"1","C:\\EGS_Project\\frontend\\src\\App.js":"2","C:\\EGS_Project\\frontend\\src\\reportWebVitals.js":"3","C:\\EGS_Project\\frontend\\src\\pages\\home.js":"4","C:\\EGS_Project\\frontend\\src\\pages\\appointments.js":"5","C:\\EGS_Project\\frontend\\src\\pages\\register.js":"6","C:\\EGS_Project\\frontend\\src\\pages\\register_doctor.js":"7","C:\\EGS_Project\\frontend\\src\\pages\\register_patient.js":"8","C:\\EGS_Project\\frontend\\src\\pages\\homepage.js":"9","C:\\EGS_Project\\frontend\\src\\pages\\NewAppointment.js":"10","C:\\EGS_Project\\frontend\\src\\pages\\profile.js":"11","C:\\EGS_Project\\frontend\\src\\pages\\profile_doctor.js":"12","C:\\EGS_Project\\frontend\\src\\pages\\profile_patient.js":"13","C:\\EGS_Project\\frontend\\src\\pages\\Call.js":"14"},{"size":715,"mtime":1679934454581,"results":"15","hashOfConfig":"16"},{"size":1391,"mtime":1680797090918,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1679934454585,"results":"18","hashOfConfig":"16"},{"size":2729,"mtime":1680621438488,"results":"19","hashOfConfig":"16"},{"size":8591,"mtime":1680801526190,"results":"20","hashOfConfig":"16"},{"size":692,"mtime":1680620248085,"results":"21","hashOfConfig":"16"},{"size":7560,"mtime":1680799418495,"results":"22","hashOfConfig":"16"},{"size":7283,"mtime":1680799430903,"results":"23","hashOfConfig":"16"},{"size":904,"mtime":1680798303790,"results":"24","hashOfConfig":"16"},{"size":10642,"mtime":1680624539838,"results":"25","hashOfConfig":"16"},{"size":722,"mtime":1680796902425,"results":"26","hashOfConfig":"16"},{"size":6542,"mtime":1680799134102,"results":"27","hashOfConfig":"16"},{"size":6035,"mtime":1680798545450,"results":"28","hashOfConfig":"16"},{"size":171,"mtime":1680800612194,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fauxj2",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},"C:\\EGS_Project\\frontend\\src\\index.js",[],[],"C:\\EGS_Project\\frontend\\src\\App.js",[],[],"C:\\EGS_Project\\frontend\\src\\reportWebVitals.js",[],[],"C:\\EGS_Project\\frontend\\src\\pages\\home.js",[],[],"C:\\EGS_Project\\frontend\\src\\pages\\appointments.js",["75","76","77"],[],"C:\\EGS_Project\\frontend\\src\\pages\\register.js",[],[],"C:\\EGS_Project\\frontend\\src\\pages\\register_doctor.js",[],[],"C:\\EGS_Project\\frontend\\src\\pages\\register_patient.js",[],[],"C:\\EGS_Project\\frontend\\src\\pages\\homepage.js",[],[],"C:\\EGS_Project\\frontend\\src\\pages\\NewAppointment.js",["78","79"],[],"import React from 'react';\r\nimport { Context } from '../App';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction LoadDoctors(state, set_state) {\r\n    let specialties = ``;\r\n    for (let specialty of state.selected_specialties) {\r\n        specialties += `&specialties=${specialty}`;\r\n    }\r\n\r\n    fetch(`/v1/doctors?limit=50&offset=0${specialties}`, {\r\n        method: \"GET\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    })\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                response.json().then(d => {\r\n                    set_state({ ...state, loading_doctors: false, error: false, doctors: d });\r\n                });\r\n            }\r\n            else {\r\n                set_state({ ...state, loading_doctors: false, error: true });\r\n            }\r\n        });\r\n}\r\n\r\nfunction LoadDoctorAppointments(state, set_state) {\r\n    var now = `2022-04-03T23:20:27.890Z`;  //change to current time\r\n\r\n    if (state.selected_doctor == null) {\r\n        set_state({ ...state, selected_doctor_apps: [] });\r\n        return;\r\n    }\r\n\r\n    fetch(`/v1/appointments?limit=50&offset=0&from=${now}&doctor_id=${state.selected_doctor}`, {\r\n        method: \"GET\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    })\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                response.json().then(a => {\r\n                    set_state({ ...state, selected_doctor_apps: a, loading_selected_doctor_apps: false });\r\n                });\r\n            }\r\n            else {\r\n                set_state({ ...state, error: true, loading_selected_doctor_apps: false });\r\n            }\r\n        });\r\n}\r\n\r\nfunction PostAppointment(appointmentBody, navigate) {\r\n    console.log(JSON.stringify(appointmentBody));\r\n\r\n    fetch(\"/v1/appointments/\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(appointmentBody)\r\n    }).then(response => {\r\n        console.log(response.status);\r\n        if (response.status === 201) {\r\n            alert(\"Success!\");\r\n            navigate(\"/appointments\");\r\n        }\r\n        else if (response.status === 403) {\r\n            alert(\"Forbidden\");\r\n        } else if (response.status === 404) {\r\n            alert(\"Doctor not found\");\r\n        } else if (response.status === 409) {\r\n            alert(\"The new appointment conflicts with an existing one\");\r\n        } else {\r\n            alert(`There was an unexpected problem. You should debug this.`);\r\n        }\r\n    });\r\n}\r\n\r\nfunction NewAppointment() {\r\n    const { ctx, set_ctx } = React.useContext(Context);\r\n    const [state, set_state] = React.useState(\r\n        {\r\n            loading_doctors: true,\r\n            error: false,\r\n            selected_doctor: null,\r\n            selected_doctor_specialties: [],\r\n            doctors: [],\r\n            selected_specialties: [],\r\n            app_specialty: null,\r\n            selected_doctor_apps: [],\r\n            loading_selected_doctor_apps: false\r\n        });\r\n    const navigate = useNavigate();\r\n\r\n    const [appointment, set_appointment] = React.useState(\r\n        {\r\n            id: '00000000-0000-0000-0000-000000000000',\r\n            datetime: '',\r\n            ical_data: null,\r\n            status: \"Scheduled\",\r\n            expected_duration: \"00:20:00\",\r\n            doctor_id: null,\r\n            patient_id: ctx.user_data == null ? null : ctx.user_data.id,\r\n            reason: null,\r\n            summary: null,\r\n            session_url: null,\r\n            specialty: null,\r\n        });\r\n\r\n    React.useEffect(() => {\r\n        if (ctx.status !== \"authenticated\") {\r\n            navigate(\"/\");\r\n        }\r\n    }, []);\r\n\r\n    if (ctx.status !== \"authenticated\") {\r\n        return \"...\";\r\n    }\r\n\r\n    const SpecialtySelector = () => {\r\n        return (\r\n            <div>\r\n                <h1>Select the specialt(y/ies) you want</h1>\r\n                <select class=\"form-select form-select-lg mb-3\" multiple aria-label=\".form-select-lg example\"\r\n                    onChange={handleSpecialtiesInputChange} name=\"selected_specialties\" value={state.selected_specialties}>\r\n                    <option selected>Specialties</option>\r\n                    <option value=\"Allergiology\">Allergiology</option>\r\n                    <option value=\"Immunology\">Immunology</option>\r\n                    <option value=\"Anesthesiology\">Anesthesiology</option>\r\n                    <option value=\"Dermathology\">Dermathology</option>\r\n                    <option value=\"DiagnosticRadiology\">Diagnostic Radiology</option>\r\n                    <option value=\"EmergencyMedicine\">Emergency Medicine</option>\r\n                    <option value=\"InternalMedicine\">Internal Medicine</option>\r\n                    <option value=\"MedicalGenetics\">Medical Genetics</option>\r\n                    <option value=\"Neurology\">Neurology</option>\r\n                    <option value=\"NuclearMedicine\">Nuclear Medicine</option>\r\n                    <option value=\"Obstetrics\">Obstetrics</option>\r\n                    <option value=\"Gynecology\">Gynecology</option>\r\n                    <option value=\"Ophthalnology\">Ophthalnology</option>\r\n                    <option value=\"Pathology\">Pathology</option>\r\n                    <option value=\"Pediatrics\">Pediatrics</option>\r\n                    <option value=\"PhysicalMedicine\">Physical Medicine</option>\r\n                    <option value=\"PreventiveMedicine\">Preventive Medicine</option>\r\n                    <option value=\"Psychiatry\">Psychiatry</option>\r\n                    <option value=\"RadiationOncology\">Radiation Oncology</option>\r\n                    <option value=\"Surgery\">Surgery</option>\r\n                    <option value=\"Urology\">Urology</option>\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const handleSpecialtiesInputChange = (event) => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let value = Array.from(target.selectedOptions, option => option.value);\r\n        if (value.includes(\"Specialties\")) value = value.filter((i) => { return i !== \"Specialties\" });\r\n        set_state({\r\n            ...state,\r\n            [name]: value,\r\n            loading_doctors: true\r\n        });\r\n    }\r\n\r\n    const Doctor = (props) => {\r\n        if (props.data.state.selected_doctor === props.data.d.id) {\r\n            return <li id={props.data.d.id} class=\"list-group-item active\" onClick={handleSelectDoctor}>Dr. {props.data.d.name} - {props.data.d.specialties.toString()}</li>;\r\n        }\r\n        return <li id={props.data.d.id} class=\"list-group-item\" onClick={handleSelectDoctor}>Dr. {props.data.d.name} - {props.data.d.specialties.toString()}</li>;\r\n    }\r\n\r\n    const Appointment = (props) => {\r\n        return <li id={props.data.d.id} class=\"list-group-item\">{props.data.d.datetime}</li>;\r\n    }\r\n\r\n    const Specialty = (props) => {\r\n        if (props.data.state.app_specialty === props.data.s) {\r\n            return <li id={props.data.s} class=\"list-group-item active\" onClick={handleSelectAppSpecialty}>{props.data.s}</li>;\r\n        }\r\n        return <li id={props.data.s} class=\"list-group-item\" onClick={handleSelectAppSpecialty}>{props.data.s}</li>;\r\n    }\r\n\r\n    const handleSelectAppSpecialty = (event) => {\r\n        console.log(event);\r\n\r\n        set_state({ ...state, app_specialty: event.target.id });\r\n    }\r\n\r\n    const handleSelectDoctor = (event) => {\r\n        console.log(event);\r\n\r\n        const new_selected_doctor = event.target.id;\r\n\r\n        const specialties = new_selected_doctor == null ? [] : state.doctors.filter((d) => { return d.id === new_selected_doctor })[0].specialties;\r\n        console.log(specialties);\r\n        set_state({ ...state, selected_doctor: new_selected_doctor, loading_selected_doctor_apps: true, selected_doctor_specialties: specialties });\r\n    }\r\n\r\n    const handleInputChange = (event) => {\r\n        console.log(event);\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        set_appointment({\r\n            ...appointment,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (state.selected_doctor == null) {\r\n            alert(\"Please select a doctor\");\r\n            return;\r\n        }\r\n        if (state.app_specialty == null) {\r\n            alert(\"Please select a specialty\");\r\n            return;\r\n        }\r\n\r\n        const appointmentBody = {\r\n            ...appointment,\r\n            doctor_id: state.selected_doctor,\r\n            specialty: state.app_specialty\r\n        }\r\n\r\n        PostAppointment(appointmentBody, navigate);\r\n    }\r\n\r\n    if (state.loading_doctors === true) {\r\n        LoadDoctors(state, set_state);\r\n    }\r\n    if (state.loading_selected_doctor_apps === true) {\r\n        LoadDoctorAppointments(state, set_state);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <SpecialtySelector></SpecialtySelector>\r\n            <h1>Doctors: </h1>\r\n            <ul class=\"list-group\">\r\n                {state.doctors.map((d) => <Doctor data={{ d: d, state: state }} />)}\r\n            </ul>\r\n            <h1>Already Scheduled Appointments: </h1>\r\n            <ul class=\"list-group\">\r\n                {state.selected_doctor_apps.map((d) => <Appointment data={{ d: d, state: state }} />)}\r\n            </ul>\r\n            <h1>Appointment Specialty: </h1>\r\n            <ul class=\"list-group\">\r\n                {state.selected_doctor_specialties.map((s) => <Specialty data={{ s: s, state: state }} />)}\r\n            </ul>\r\n            <form onSubmit={handleSubmit}>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"datetime\" class=\"form-label\">Date Time</label>\r\n                    <input type=\"datetime-local\" class=\"form-control\" id=\"datetime\" value={appointment.datetime}\r\n                        name=\"datetime\" onChange={handleInputChange}></input>\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"name\" class=\"form-label\">Appointment Reason</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"name\"\r\n                        name=\"reason\" value={state.name} onChange={handleInputChange}></input>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewAppointment;\r\n","C:\\EGS_Project\\frontend\\src\\pages\\profile.js",["80","81"],[],"C:\\EGS_Project\\frontend\\src\\pages\\profile_doctor.js",["82"],[],"C:\\EGS_Project\\frontend\\src\\pages\\profile_patient.js",["83"],[],"C:\\EGS_Project\\frontend\\src\\pages\\Call.js",["84","85","86"],[],"import React from 'react';\r\nimport { Context } from '../App';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction Call(props) {\r\n\r\n\r\n}\r\n\r\nexport default Call;",[],{"ruleId":"87","severity":1,"message":"88","line":100,"column":18,"nodeType":"89","messageId":"90","endLine":100,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":175,"column":8,"nodeType":"93","endLine":175,"endColumn":10,"suggestions":"94"},{"ruleId":"87","severity":1,"message":"95","line":192,"column":9,"nodeType":"89","messageId":"90","endLine":192,"endColumn":19},{"ruleId":"87","severity":1,"message":"88","line":86,"column":18,"nodeType":"89","messageId":"90","endLine":86,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":120,"column":8,"nodeType":"93","endLine":120,"endColumn":10,"suggestions":"96"},{"ruleId":"87","severity":1,"message":"88","line":8,"column":18,"nodeType":"89","messageId":"90","endLine":8,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":15,"column":8,"nodeType":"93","endLine":15,"endColumn":10,"suggestions":"97"},{"ruleId":"91","severity":1,"message":"92","line":78,"column":8,"nodeType":"93","endLine":78,"endColumn":10,"suggestions":"98"},{"ruleId":"91","severity":1,"message":"92","line":78,"column":8,"nodeType":"93","endLine":78,"endColumn":10,"suggestions":"99"},{"ruleId":"87","severity":1,"message":"100","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":13},{"ruleId":"87","severity":1,"message":"101","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":17},{"ruleId":"87","severity":1,"message":"102","line":3,"column":10,"nodeType":"89","messageId":"90","endLine":3,"endColumn":21},"no-unused-vars","'set_ctx' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'ctx.status' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["103"],"'new_button' is assigned a value but never used.",["104"],["105"],["106"],["107"],"'React' is defined but never used.","'Context' is defined but never used.","'useNavigate' is defined but never used.",{"desc":"108","fix":"109"},{"desc":"108","fix":"110"},{"desc":"108","fix":"111"},{"desc":"108","fix":"112"},{"desc":"108","fix":"113"},"Update the dependencies array to be: [ctx.status, navigate]",{"range":"114","text":"115"},{"range":"116","text":"115"},{"range":"117","text":"115"},{"range":"118","text":"115"},{"range":"119","text":"115"},[6077,6079],"[ctx.status, navigate]",[3838,3840],[450,452],[2184,2186],[2365,2367]]